---
import ThemeIcon from "./ThemeIcon.astro";
import ThemeToggle from "./ThemeToggle.astro";

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Mis Proyectos",
    label: "mis-proyectos",
    url: "/#proyectos",
  },
  {
    title: "Experiencia Laboral",
    label: "experiencia-laboral",
    url: "/#experiencia",
  },
  {
    title: "Blog",
    label: "blog",
    url: "/blog",
  },
  {
    title: "Tienda",
    label: "tienda",
    url: "/store",
    hasDot: true,
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "/#contacto",
  },
];
---

<header class="fixed top-0 z-10 w-full bg-[#f0e9ff] py-4">
  <div class="container mx-auto flex items-center justify-between px-4">
    <!-- Logo -->
    <div class="flex items-center">
      <a href="/" class="text-xl font-bold">
        <span class="text-gray-800">&lt;/&gt;</span>
        <span class="text-gray-900">Daniel</span>
        <span class="text-purple-600">.</span>
      </a>
    </div>

    <!-- Mobile Menu Button -->
    <button id="mobile-menu-button" class="lg:hidden" aria-label="Toggle menu">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>

    <!-- Desktop Navigation -->
    <nav class="hidden lg:flex items-center space-x-6">
      {
        navItems.map((link) => (
          <a
            class="relative text-sm font-medium text-gray-800 transition hover:text-purple-600"
            aria-label={link.label}
            href={link.url}
          >
            {link.title}
            {link.hasDot && (
              <span class="absolute -right-2 top-0 h-1.5 w-1.5 rounded-full bg-purple-600 blinking-dot"></span>
            )}
          </a>
        ))
      }
    </nav>

    <!-- CTA Button (hidden on mobile) -->
    <a
      href="/contact"
      class="hidden lg:flex items-center rounded-full bg-purple-600 px-4 py-2 text-sm font-medium text-white transition hover:bg-purple-700"
    >
      Hablemos
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="ml-2 h-4 w-4"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"
        />
      </svg>
    </a>
  </div>

  <!-- Mobile Menu (hidden by default) -->
  <div id="mobile-menu" class="hidden lg:hidden bg-white shadow-lg absolute left-0 right-0 top-full">
    <div class="container mx-auto px-4 py-3">
      <nav class="flex flex-col space-y-4">
        {
          navItems.map((link) => (
            <a
              class="relative text-sm font-medium text-gray-800 transition hover:text-purple-600 py-2"
              aria-label={link.label}
              href={link.url}
            >
              {link.title}
              {link.hasDot && (
                <span class="absolute ml-2 top-2.5 h-1.5 w-1.5 rounded-full bg-purple-600 blinking-dot"></span>
              )}
            </a>
          ))
        }
        <!-- CTA Button for mobile -->
        <a
          href="/contact"
          class="flex items-center justify-center rounded-full bg-purple-600 px-4 py-2 text-sm font-medium text-white transition hover:bg-purple-700 w-full"
        >
          Let's Talk
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="ml-2 h-4 w-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"
            />
          </svg>
        </a>
      </nav>
    </div>
  </div>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    // Section highlighting logic
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-purple-600");
            } else {
              item.classList.remove("text-purple-600");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Mobile menu toggle
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
      });
      
      // Close menu when clicking on a link
      const mobileLinks = mobileMenu.querySelectorAll("a");
      mobileLinks.forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.add("hidden");
        });
      });
    }

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  .blinking-dot {
    animation: blink 1.5s infinite;
  }

  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }

  /* Keep your existing animation for scroll effect */
  /* nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  } */

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-white/50 dark:bg-gray-800/90 ring-white/10;
    }
  }
  
  /* Mobile menu transition */
  #mobile-menu {
    transition: all 0.3s ease-in-out;
  }
</style>

